library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_signed.all;

entity addr_init is
	port(
		clk:in std_logic;
		rst_n:in std_logic;
		layer:in std_logic_vector(3 downto 0);
		once_finish:in std_logic; 
		weight_en:out std_logic;
		w_start_addr:out std_logic_vector(11 downto 0);
		pix_start_addr:out std_logic_vector(9 downto 0);
		is_onetofour:out std_logic --是前四个通道还是后四个通道
	);
end entity;

architecture behav of addr_init is
signal count:std_logic_vector(9 DOWNTO 0):="0000000000";
signal weight_done, onetofour:std_logic:='0';
signal gobal_pool_cnt:std_logic_vector(1 DOWNTO 0):="00";
signal w_addr_init:std_logic_vector(11 DOWNTO 0):="000000000000";
begin

process(clk)
begin
if rst_n='0' then
	count <= (others=>'0');
	weight_done <= '0';
elsif rising_edge(clk) then
	if(once_finish='1') then
		count <= count + '1';
	end if;
	case(layer) is
		when "0001"|"0010" => if count="1100010000" then --784 "1100010000"
									count <= (others=>'0');
									weight_done <= '1';
								else weight_done <= '0';
								end if;
		when "0100" => if count="0000000100" then --196 "0011000100"
									count <= (others=>'0');
									weight_done <= '1';
								else weight_done <= '0';
								end if;
		when "0101" => if count="0000000100" then --196 "0011000100"
							count <= (others=>'0');
						end if;
						weight_done <= '0';
		when "0111" => if count="0000110001" then --49 
							count <= (others=>'0');
							weight_done <= '1';
						else weight_done <= '0';
						end if;
		when others => weight_done <= '0';
					   count <= (others=>'0');
	end case;
end if;
end process;
weight_en <= weight_done;
process(clk)
begin
if rst_n='0' then
	w_addr_init <= (others=>'0');
elsif rising_edge(clk) then
	if(weight_done='1') then
		w_addr_init <= w_addr_init + "000000100100"; --+36
	end if;
end if;
end process;
w_start_addr <= w_addr_init;
----------------------------------------------------------
process(clk)
begin
if rst_n='0' then
	gobal_pool_cnt <= "00";
	onetofour <= '1';
elsif rising_edge(clk) then
case(layer) is
	when "0001"|"0010"|"0011"|"0100" => onetofour <= '1';
	when "0101" => if count="0000000100" then --196 "0011000100"
						onetofour <= not onetofour;
				   end if;
	when "0111" => if count="0000000010" then --49 "0000110001"
						onetofour <= not onetofour;
				   end if;
	when "1000" => if count="0000000001" then
						gobal_pool_cnt <= gobal_pool_cnt + '1';
					end if;
	when others=> onetofour <= '1';gobal_pool_cnt <= "00";
end case;
end if;
end process;

process(onetofour, gobal_pool_cnt, layer)
begin
case(layer)is
when "0001"|"0010"|"0011"|"0100"|"0101"|"0111" =>
	if (onetofour='1')then
		pix_start_addr <= (others=>'0');
	else 
		pix_start_addr <= "0110001000"; --392
	end if;
when "1000" => 
	case(gobal_pool_cnt)is
		when "00" => pix_start_addr <= (others=>'0');
		when "01" => pix_start_addr <= "0011000100"; --196
		when "10" => pix_start_addr <= "0110001000"; --392
		when "11" => pix_start_addr <= "1001001100"; --588
	end case;
when others => NULL;
end case;
end process;
is_onetofour <= onetofour;
end behav;
