--a_graycounter DEVICE_FAMILY="Cyclone IV E" PVALUE=1 WIDTH=11 aclr clock cnt_en q ALTERA_INTERNAL_OPTIONS=suppress_da_rule_internal=S102
--VERSION_BEGIN 18.0 cbx_a_gray2bin 2018:04:24:18:04:18:SJ cbx_a_graycounter 2018:04:24:18:04:18:SJ cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = reg 15 
OPTIONS ALTERA_INTERNAL_OPTION = "suppress_da_rule_internal=S102;{-to counter6a0} POWER_UP_LEVEL=HIGH;{-to parity7} POWER_UP_LEVEL=HIGH";

SUBDESIGN a_graycounter_2lc
( 
	aclr	:	input;
	clock	:	input;
	cnt_en	:	input;
	q[10..0]	:	output;
) 
VARIABLE 
	counter6a0 : dffeas
		WITH (
			power_up = "high"
		);
	counter6a1 : dffeas;
	counter6a2 : dffeas;
	counter6a3 : dffeas;
	counter6a4 : dffeas;
	counter6a5 : dffeas;
	counter6a6 : dffeas;
	counter6a7 : dffeas;
	counter6a8 : dffeas;
	counter6a9 : dffeas;
	counter6a10 : dffeas;
	parity7 : dffeas
		WITH (
			power_up = "high"
		);
	sub_parity8a[2..0] : dffeas;
	cntr_cout[10..0]	: WIRE;
	parity_cout	: WIRE;
	sclr	: NODE;
	updown	: NODE;

BEGIN 
	counter6a[10..0].clk = clock;
	counter6a[10..1].clrn = (! aclr);
	counter6a[10..0].d = ( (counter6a[10].q $ cntr_cout[9..9]), (counter6a[9].q $ (counter6a[8].q & cntr_cout[8..8])), (counter6a[8].q $ (counter6a[7].q & cntr_cout[7..7])), (counter6a[7].q $ (counter6a[6].q & cntr_cout[6..6])), (counter6a[6].q $ (counter6a[5].q & cntr_cout[5..5])), (counter6a[5].q $ (counter6a[4].q & cntr_cout[4..4])), (counter6a[4].q $ (counter6a[3].q & cntr_cout[3..3])), (counter6a[3].q $ (counter6a[2].q & cntr_cout[2..2])), (counter6a[2].q $ (counter6a[1].q & cntr_cout[1..1])), (counter6a[1].q $ (counter6a[0].q & cntr_cout[0..0])), ((cnt_en & (counter6a[0].q $ (! parity_cout))) # ((! cnt_en) & counter6a[0].q)));
	counter6a[0].prn = (! aclr);
	counter6a[10..0].sclr = sclr;
	parity7.clk = clock;
	parity7.d = ((cnt_en & ((sub_parity8a[0..0].q $ sub_parity8a[1..1].q) $ sub_parity8a[2..2].q)) # ((! cnt_en) & parity7.q));
	parity7.prn = (! aclr);
	parity7.sclr = sclr;
	sub_parity8a[].clk = ( clock, clock, clock);
	sub_parity8a[].clrn = ( (! aclr), (! aclr), (! aclr));
	sub_parity8a[].d = ( ((cnt_en & ((counter6a[8..8].q $ counter6a[9..9].q) $ counter6a[10..10].q)) # ((! cnt_en) & sub_parity8a[2].q)), ((cnt_en & (((counter6a[4..4].q $ counter6a[5..5].q) $ counter6a[6..6].q) $ counter6a[7..7].q)) # ((! cnt_en) & sub_parity8a[1].q)), ((cnt_en & (((counter6a[0..0].q $ counter6a[1..1].q) $ counter6a[2..2].q) $ counter6a[3..3].q)) # ((! cnt_en) & sub_parity8a[0].q)));
	sub_parity8a[].sclr = ( sclr, sclr, sclr);
	cntr_cout[] = ( B"0", (cntr_cout[8..8] & (! counter6a[8].q)), (cntr_cout[7..7] & (! counter6a[7].q)), (cntr_cout[6..6] & (! counter6a[6].q)), (cntr_cout[5..5] & (! counter6a[5].q)), (cntr_cout[4..4] & (! counter6a[4].q)), (cntr_cout[3..3] & (! counter6a[3].q)), (cntr_cout[2..2] & (! counter6a[2].q)), (cntr_cout[1..1] & (! counter6a[1].q)), (cntr_cout[0..0] & (! counter6a[0].q)), (cnt_en & parity_cout));
	parity_cout = (((! parity7.q) $ updown) & cnt_en);
	q[] = counter6a[10..0].q;
	sclr = GND;
	updown = VCC;
END;
--VALID FILE
